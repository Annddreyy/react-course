{"version":3,"file":"static/js/634.3376a2ed.chunk.js","mappings":"qIACA,QAA0B,yBAA1B,EAAkE,8BAAlE,EAA2G,0BAA3G,EAA4I,sB,cCA5I,QAAyB,2B,aCGzB,MAUA,EAVmBA,IAAmB,IAAlB,GAAEC,EAAE,KAAEC,GAAMF,EAC5B,MAAMG,EAAO,YAAcF,EAC3B,OACIG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKC,IAAI,8BAA2BC,IAAI,MACxCF,EAAAA,EAAAA,KAACG,EAAAA,GAAO,CAACC,GAAIT,EAAKI,SAAEL,MAClB,ECTd,EAA0B,yBCQ1B,EANgBF,IAAkB,IAAjB,QAAEa,GAASb,EACxB,OACIQ,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAAEM,GAAc,ECJxD,EAAuB,6B,4CCKvB,MAAMC,GAAgBC,EAAAA,EAAAA,GAAiB,KAkBvC,GAF4BC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,oBAAlBD,EAdLhB,IAAgC,IAA/B,aAAEkB,EAAY,QAAEL,GAASb,EAC7C,OACII,EAAAA,EAAAA,MAAA,QAAMe,SAAWD,EAAeb,UAAYC,EAAcC,SAAA,EACtDC,EAAAA,EAAAA,KAACY,EAAAA,EAAK,CACFC,UAAYC,EAAAA,EACZpB,KAAK,cACLqB,MAAQV,EACRW,SAAU,CAACC,EAAAA,EAAeX,MAE9BN,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,6DACL,ICYf,EAxBgBP,IAAuD,IAAtD,QAAE0B,EAAO,SAAEC,EAAQ,WAAEC,EAAU,cAAEC,GAAe7B,EAEzD8B,EAAiBJ,EAAQK,KAAIC,IAAQxB,EAAAA,EAAAA,KAACyB,EAAU,CAAC/B,KAAM8B,EAAK9B,KAAMD,GAAI+B,EAAK/B,IAAS+B,EAAK/B,MACzFiC,EAAkBP,EAASI,KAAIC,IAAQxB,EAAAA,EAAAA,KAAC2B,EAAO,CAACtB,QAASmB,EAAKnB,QAASZ,GAAI+B,EAAK/B,IAAS+B,EAAK/B,MAMlG,OACIG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAwBC,SAClCuB,KAEN1B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAaC,SACvB2B,KAEN1B,EAAAA,EAAAA,KAAC4B,EAAc,CAACjB,SAbVkB,IACdR,EAAcQ,EAAS,eAAe,EAYQxB,QAAUe,SAElD,E,4CCLd,SAAeU,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAhBmBC,IACZ,CACHd,QAASc,EAAMC,aAAaf,QAC5BC,SAAUa,EAAMC,aAAad,SAC7BC,WAAYY,EAAMC,aAAab,WAC/Bc,OAAQF,EAAMG,KAAKD,WAIDE,IACf,CACHf,cAAgBgB,GAASD,GAASE,EAAAA,EAAAA,GAA2BD,QAMjEE,EAAAA,EAFJ,CAGGC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","webpack://my-app/./src/components/Dialogs/NewMessageForm/NewMessageForm.module.css?8955","components/Dialogs/NewMessageForm/NewMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Y6anZ\",\"dialog-items\":\"Dialogs_dialog-items__rPcBE\",\"messages\":\"Dialogs_messages__GRgN4\",\"chat\":\"Dialogs_chat__noX9e\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__Bnwje\"};","import React from \"react\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport classes from './DialogItem.module.css';\r\n\r\nconst DialogItem = ({ id, name }) => {\r\n    const path = '/dialogs/' + id;\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <img src=\".\\src\\assets\\people.jpeg\" alt=\"\" />\r\n            <NavLink to={path}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__8ZBYB\"};","import React from \"react\";\r\nimport classes from './Message.module.css';\r\n\r\nconst Message = ({ message }) => {\r\n    return (\r\n        <div className={classes.message}>{message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewMessageForm_form__zIBxC\"};","import React from 'react';\r\nimport classes from './NewMessageForm.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { maxLenghtCreator, requiredField } from '../../../utils/validators/validators';\r\n\r\nconst maxLenght1000 = maxLenghtCreator(1000);\r\n\r\nconst NewMessageForm = ({ handleSubmit, message }) => {\r\n    return (\r\n        <form onSubmit={ handleSubmit } className={ classes.form } >\r\n            <Field \r\n                component={ Textarea } \r\n                name='new-message' \r\n                value={ message } \r\n                validate={[requiredField, maxLenght1000]}\r\n            />\r\n            <button>Отправить</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ReduxNewMessageForm = reduxForm({ form: 'new-message-form' })(NewMessageForm);\r\n\r\nexport default ReduxNewMessageForm\r\n","import React from \"react\";\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport NewMessageForm from \"./NewMessageForm/NewMessageForm\";\r\n\r\nconst Dialogs = ({ dialogs, messages, newMessage, addNewMessage }) => {\r\n    debugger;\r\n    let dialogElements = dialogs.map(elem => <DialogItem name={elem.name} id={elem.id} key={elem.id} />);\r\n    let messageElements = messages.map(elem => <Message message={elem.message} id={elem.id} key={elem.id} />)\r\n\r\n    const onSubmit = (formData) => {\r\n        addNewMessage(formData['new-message']);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes['dialog-items']}>\r\n                { dialogElements }\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div className={classes.chat}>\r\n                    { messageElements }\r\n                </div>\r\n                <NewMessageForm onSubmit={ onSubmit } message={ newMessage } />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs'\r\nimport { addNewMessageActionCreator } from \"../../redux/messages/messagesReducer\";\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.messagesPage.dialogs,\r\n        messages: state.messagesPage.messages,\r\n        newMessage: state.messagesPage.newMessage,\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewMessage: (text) => dispatch(addNewMessageActionCreator(text))\r\n    };\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs);\r\n"],"names":["_ref","id","name","path","_jsxs","className","classes","children","_jsx","src","alt","NavLink","to","message","maxLenght1000","maxLenghtCreator","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","value","validate","requiredField","dialogs","messages","newMessage","addNewMessage","dialogElements","map","elem","DialogItem","messageElements","Message","NewMessageForm","formData","compose","connect","state","messagesPage","isAuth","auth","dispatch","text","addNewMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}